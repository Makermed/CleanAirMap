# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "refactor", "github-actions-sandbox" ]
  pull_request:
    branches: [ "main", "refactor", "github-actions-sandbox" ]

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ${{ github.repository }}
  SERVER_BUILD_ARTIFACT: server-build-dir
  SERVER_BUILD_PATH: ./backend/dist

jobs:
  build-client:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client/

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './client/package-lock.json'
      - run: npm install
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './client/package-lock.json'
      - run: npm install
      - run: npm ci
      - run: npm run build --if-present
      -
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SERVER_BUILD_ARTIFACT }}
          path: ${{ env.SERVER_BUILD_PATH }}

  build-and-deploy-server-image:
    needs: build-server
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub packages
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}-be
      -
        uses: actions/checkout@v3
      -
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SERVER_BUILD_ARTIFACT }}
          path: ${{ env.SERVER_BUILD_PATH }}
      -
        name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}