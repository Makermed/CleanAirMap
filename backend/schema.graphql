### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AddReadingInputType {
  locationId: Int!
  reading: ReadingInputType!
}

input AddReadingNewLocationInputType {
  location: LocationInputType!
  reading: ReadingInputType!
}

type AddReadingNewLocationPayload {
  location: Location!
  reading: Reading!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Location {
  avgCo2: Float
  created_at: DateTime
  created_id: Int
  description: String
  district: String
  locality: String
  locationId: Int
  name: String
  place: String
  position: Position
  postcode: String
  region: String
  rooms: [Room!]
  street: String
  type: LocationEnum
}

"""The type of location, eg. shop, place of worship, hospital, etc."""
enum LocationEnum {
  ALL
  ARENA
  ARTS
  BAR
  BEAUTY
  CAFE
  CAMERA
  DENTISTS
  DINING
  FITNESS
  GASSTATION
  HOSPITAL
  HOTEL
  LIBRARY
  MOVIE
  MUSEUM
  PARK
  PARKING
  PHARMACY
  PROFESSIONAL
  RESTAURANT
  SCHOOL
  SENIORS
  SHOP
  TRAIN
  WORSHIP
}

input LocationInputType {
  country: String!
  description: String
  district: String
  locality: String
  name: String!
  place: String!
  position: Position!
  postcode: String
  region: String!
  street: String!
  type: LocationEnum!
}

type Mutation {
  addReadingNewLocation(input: AddReadingNewLocationInputType!): AddReadingNewLocationPayload
  createLocation(data: LocationInputType!): Location
  createRoom(locationId: Int!, name: String!): Room
}

"""A GeoJSON Position"""
scalar Position

type Query {
  locations(locationId: Int): [Location]
  readings: [Reading]
  rooms(roomId: Int): [Room]
}

type Reading {
  created_at: DateTime!
  id: Int!
  location: Location!
  notes: String
  unit: ReadingUnitEnum!
  value: Float!
}

input ReadingInputType {
  notes: String
  unit: ReadingUnitEnum!
  value: Float!
}

"""The supported units for air quality readings"""
enum ReadingUnitEnum {
  PPM_CO2
}

type Room {
  created_at: DateTime
  created_id: Int
  locationId: Int
  name: String
  roomId: Int
}